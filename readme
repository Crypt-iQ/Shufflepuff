An implementation of the CoinShuffle protocol in java. 

http://crypsys.mmci.uni-saarland.de/projects/CoinShuffle/coinshuffle.pdf

The general philosophy of this implementation is to write code that not only 
runs and implements the protocol, but as an exposition as clear as that of the 
original paper. As a result, this implementation assumes as given the same 
expectations that would be expected in the original exposition. 

Therefore, this implementation of CoinShuffle is NOT plug-and-play! Anyone who 
attempts to use this library must be sufficiently facile with cryptograhy and 
computer networks as to be capable of reading the paper linked above  and to 
provide this implementation with the correct cryptographic primitives and 
network interactions. 

The purpose of this design is that a set of test cases can be developed for
the protocol as a whole before any work has been put into its details. This 
means that there can already be a huge set of test cases very early
in the development of a working version of the protocol, which will greatly 
reduce the risk of introducing errors as the rest of the development work 
proceeds. Furthermore, this protocol can be adapted to any java implementation
of Bitcoin, or any other cryptocurrency.

Right now there are only positive test cases and the correct responses for
malicious behavior have not been implemented yet.

Instructions: After reading this file, go into the form package and read 
the function protocolDefinition() in ShuffleMachine.java, followed by
TestShuffleMachine.java, and Simulator.java. Try running the tests.

Finally, implement the following interfaces:

Coin
CoinAddress
CoinAmount
CoinSignature
CoinTransaction

Crypto
DecryptionKey
EncryptionKey
SigningKey
VerificationKey

SessionIdentifier
MessageFactory
Message

Network


